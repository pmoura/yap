#  YAP @YAP_FULL_VERSION@ User and Reference Manual         {#mainpage}

This document provides User information on version @YAP_FULL_VERSION@
of YAP (<em>Yet Another Prolog</em>). The YAP Prolog System is a
high-performance Prolog compiler developed at Universidade do Porto.



![The YAP Logo](images/yap_256x256x32.png)

NOTE: this version of YAP is still experimental, documentation may be missing or out of date.
     

\author Vitor Santos Costa, \author Luis Damas, \author Rogwrio Reis \author Ruben Azevedo

© 1989-201 L. Damas, V. Santos Costa and Universidade do Porto. Permission is granted to make and distribute verbatim copies of this manual provided the copyright notice and this permission notice are preserved on all copies. Permission is granted to copy and distribute modified versions of this manual under the conditions for verbatim copying, provided that the entire resulting derived work is distributed under the terms of a permission notice identical to this one. Permission is granted to copy and distribute translations of this manual into another language, under the above conditions for modified versions.

This manual was written by Vítor Santos Costa, Luís Damas, Rogério Reis, and Rúben Azevedo. The manual is largely based on the DECsystem-10 Prolog User's Manual by D.L. Bowen, L. Byrd, F. C. N. Pereira, L. M. Pereira, and D. H. D. Warren. We have used comments from the Edinburgh Prolog library written by R. O'Keefe. Documentation from many built-ins is originally from the SWI-Prolog manual, with the gracious authorization from Jan Wielemaker. We would also like to gratefully acknowledge the contributions from Ashwin Srinivasian.

- [Installing and Configuring YAP](INSTALL.md)

- [Executing YAP Programs](CALLING_YAP.md)

- [Core Prolog](group__Builtins.md)

- [The Library](group__YAPLibrary.md)

- [Program Development](group__YAPProgramming.md)

- [Extensions](group__YapExtensions.md)

- [The Foreign Interface](group__YAPAPI.md)

- [The Packages](packages.md)

Some general info.

@defgroup Builtins Core Prolog YAP
@ingroup mainpage
@brief The main core features of the Prolog engine





 @defgroup InputOutput YAP  support for InputOutput
@ingroup Builtins

@brief The main core features of the Prolog engine





 @defgroup YAPLibrary The YAP Library
@ingroup mainpage

@brief   Describes a number of useful modules.

The module supports the library_directory path (set by the LIBDIR variable in the Makefile for YAP). Several files in the library are originally from the public-domain Edinburgh Prolog library.









 @defgroup YAPProgramming Developing Programs in YAP
@ingroup mainpage

we present the main predicates and directives available to load
  files and to control the Prolog environment.








 @defgroup YAPConsulting Loading and Organising YAP Programs
@brief we present the main predicates and directives available to load
   files and to control the Prolog environment.






@defgroup YapExtensions YAP Supported Extensions to Prolog
@ingroup mainpage

@brief Describes major changes to the original Prolog engine






 @defgroup YAPPackages The Prolog packages
 
@ingroup mainpage
@{
 YAP also distributes the output of number of projects that were originally built or eventually ported to YAP.
 
@}





 @defgroup YAPAPI The YAP Foreign Language
@ingroup mainpage

@brief The Foreign Language Interfaces


YAP provides the user with three facilities for writing
predicates in a language other than Prolog. Under Unix systems,
most language implementations were linkable to `C`, and the first interface exported  the YAP machinery to the C language. YAP also implements most of the SWI-Prolog foreign language interface.
This gives portability with a number of SWI-Prolog packages and avoids garbage collection by using @ref slotInterface. Last, a new C++ based interface is
being designed to work with the swig (www.swig.org) interface compiler.







